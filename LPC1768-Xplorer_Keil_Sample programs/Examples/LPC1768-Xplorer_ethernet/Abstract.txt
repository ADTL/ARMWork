/**********************************************************************
* $Id$		abstract.txt 			
*//**
* @file		abstract.txt 
* @brief	Example description file
* @version	2.0
* @date		
* @author	NXP MCU SW Application Team
*
* Copyright(C) 2010, NXP Semiconductor
* All rights reserved.
*
***********************************************************************
* Software that is described herein is for illustrative purposes only
* which provides customers with programming information regarding the
* products. This software is supplied "AS IS" without any warranties.
* NXP Semiconductors assumes no responsibility or liability for the
* use of the software, conveys no license or title under any patent,
* copyright, or mask work right to the product. NXP Semiconductors
* reserves the right to make changes in the software without
* notification. NXP Semiconductors also make no representation or
* warranty that such application will be suitable for the specified
* use without further testing or modification.
**********************************************************************/
  
@Example description:
	Purpose:
		This example describes how to implement an simple web application 
	Process:
		This tiny web server was taken from the 'Design & Elektronik'
		extra issue 'Embedded Internet'. It can be downloaded from the 
		following web site: www.elektroniknet.de/extraheft. 
		
		Note that modifications are not optimal, because ARM is a 32-bit 
		machine while the original software was written for 16-bit cpu.
		
		The web page shows the values of two analog inputs (AN0 and AN1).
		This tiny webserver needs very little resources and therefore has
		some restrictions:
		- only one active TCP session at any one time
		- no support for fragmented IP datagrams
		- no buffer for TCP datagrams received in wrong order
		- only one web page. No GIF/JPG graphics possible.
		
		The IP address can be modified in the module tcpip.h to
		fit into your existing LAN (see MYIP_x). 
		The default IP address is: 192.168.1.123
		Please order the extra issue 'Embedded Internet' of the 
		'Design & Elektronik' magazine for a technical description.
		It is only available in German language.
			
@Directory contents:
	\EWARM: includes EWARM (IAR) project and configuration files
	\Keil:	includes RVMDK (Keil)project and configuration files 
	
	ADC.h/.c: ADC low level functions
	easyweb.c/.h: easy web application (Main program)
	EMAC.h/.c: LPC1768 EMAC hardware driver functions
	lpc17xx_libcfg.h: Library configuration file - include needed driver library for this example 
	Retarget.c: target-dependent low level functions
	tcpip.h/.c: implement TCP/IP stack functions	
	makefile: Example's makefile (to build with GNU toolchain)
	webpage.h: webpage html source
	

	
	
	
	
	Step to run:
		- Step 1: Choose correct working board by uncomment correct defined board in lpc17xx_emac.h file
			+ If using MCB1700 board, uncomment "#define MCB_LPC_1768"
			+ If using IAR-LPC1768-KS board, uncomment "#define MCB_LPC_1768"
			(Should not uncomment both symbols at the same time)
		- Step 2: Build example.
		- Step 3: Burn hex file into board.
		- Step 4: Use a Straight ethernet cable connect the ETH port on eval board to the router (that mounts your PC also)
	
		- Step 5: Re-config IP address on PC:
					+ IP address: 192.168.1.123 
					+ Subnet mask: 255.255.255.0
		- Step 6: Reset board, monitor the status via serial display until EMAC initialized
		- Step 7: Open command prompt window, execute 'ping 192.168.1.123' command
		- Step 8: Open web browser, access to address "http://192.168.1.123" to display the content
		           of webserver. Turn potentiometer and see the update ADC value on this web
		           		
		(Pls reference "LPC17xx Example Description" document - chapter "Examples > EMAC > Easy_Web"
		for more details)
		
@Tip:
	- Open \EWARM\*.eww project file to run example on IAR
	- Open \RVMDK\*.uvproj project file to run example on Keil	
	
			